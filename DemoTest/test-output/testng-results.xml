<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-11T15:03:01 IST" name="QATestSuite" finished-at="2023-11-11T15:03:37 IST" duration-ms="36234">
    <groups>
    </groups>
    <test started-at="2023-11-11T15:03:01 IST" name="RegressionTest" finished-at="2023-11-11T15:03:37 IST" duration-ms="36234">
      <class name="qa.tests.Testcase0">
        <test-method is-config="true" signature="beforeTestMethod()[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:01 IST" name="beforeTestMethod" finished-at="2023-11-11T15:03:01 IST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:01 IST" name="beforeMethod" finished-at="2023-11-11T15:03:10 IST" duration-ms="8221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.tests.Testcase0.googlePagetest01()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="googlePagetest01()[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:10 IST" name="googlePagetest01" finished-at="2023-11-11T15:03:10 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- googlePagetest01 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:10 IST" name="afterMethod" finished-at="2023-11-11T15:03:10 IST" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=googlePagetest01 status=SUCCESS method=Testcase0.googlePagetest01()[pri:0, instance:qa.tests.Testcase0@7ce026d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:10 IST" name="beforeMethod" finished-at="2023-11-11T15:03:15 IST" duration-ms="4423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.tests.Testcase0.googlePagetest02()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="googlePagetest02()[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:15 IST" name="googlePagetest02" finished-at="2023-11-11T15:03:15 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- googlePagetest02 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:15 IST" name="afterMethod" finished-at="2023-11-11T15:03:15 IST" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=googlePagetest02 status=SUCCESS method=Testcase0.googlePagetest02()[pri:0, instance:qa.tests.Testcase0@7ce026d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:qa.tests.Testcase0@7ce026d3]" started-at="2023-11-11T15:03:15 IST" name="afterTest" finished-at="2023-11-11T15:03:16 IST" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- qa.tests.Testcase0 -->
      <class name="qa.tests.Testcase1">
        <test-method is-config="true" signature="beforeTestMethod()[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:16 IST" name="beforeTestMethod" finished-at="2023-11-11T15:03:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:16 IST" name="beforeMethod" finished-at="2023-11-11T15:03:21 IST" duration-ms="5285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.tests.Testcase1.testMethod03()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod03()[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:21 IST" name="testMethod03" finished-at="2023-11-11T15:03:21 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod03 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:21 IST" name="afterMethod" finished-at="2023-11-11T15:03:21 IST" duration-ms="616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod03 status=SUCCESS method=Testcase1.testMethod03()[pri:0, instance:qa.tests.Testcase1@231f98ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:21 IST" name="beforeMethod" finished-at="2023-11-11T15:03:26 IST" duration-ms="4724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.tests.Testcase1.testMethod04()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="testMethod04()[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:26 IST" name="testMethod04" finished-at="2023-11-11T15:03:26 IST" duration-ms="15" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Mismatch expected [xx] but found [xxx]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Mismatch expected [xx] but found [xxx]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at qa.tests.Testcase1.testMethod04(Testcase1.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod04 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:26 IST" name="afterMethod" finished-at="2023-11-11T15:03:27 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod04 status=SKIP method=Testcase1.testMethod04()[pri:0, instance:qa.tests.Testcase1@231f98ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:27 IST" name="beforeMethod" finished-at="2023-11-11T15:03:31 IST" duration-ms="4574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.tests.Testcase1.testMethod04()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod04()[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:31 IST" name="testMethod04" finished-at="2023-11-11T15:03:31 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Mismatch expected [xx] but found [xxx]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Mismatch expected [xx] but found [xxx]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at qa.tests.Testcase1.testMethod04(Testcase1.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod04 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:31 IST" name="afterMethod" finished-at="2023-11-11T15:03:32 IST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod04 status=FAILURE method=Testcase1.testMethod04()[pri:0, instance:qa.tests.Testcase1@231f98ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:qa.tests.Testcase1@231f98ef]" started-at="2023-11-11T15:03:32 IST" name="afterTest" finished-at="2023-11-11T15:03:32 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- qa.tests.Testcase1 -->
      <class name="qa.tests.Testcase2">
        <test-method is-config="true" signature="beforeTestMethod()[pri:0, instance:qa.tests.Testcase2@7c137fd5]" started-at="2023-11-11T15:03:32 IST" name="beforeTestMethod" finished-at="2023-11-11T15:03:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.tests.Testcase2@7c137fd5]" started-at="2023-11-11T15:03:32 IST" name="beforeMethod" finished-at="2023-11-11T15:03:37 IST" duration-ms="4742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.tests.Testcase2.TCP_379_testMethod06()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TCP_379_testMethod06()[pri:0, instance:qa.tests.Testcase2@7c137fd5]" started-at="2023-11-11T15:03:37 IST" name="TCP_379_testMethod06" finished-at="2023-11-11T15:03:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TCP_379_testMethod06 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.tests.Testcase2@7c137fd5]" started-at="2023-11-11T15:03:37 IST" name="afterMethod" finished-at="2023-11-11T15:03:37 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TCP_379_testMethod06 status=SUCCESS method=Testcase2.TCP_379_testMethod06()[pri:0, instance:qa.tests.Testcase2@7c137fd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:qa.tests.Testcase2@7c137fd5]" started-at="2023-11-11T15:03:37 IST" name="afterTest" finished-at="2023-11-11T15:03:37 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- qa.tests.Testcase2 -->
    </test> <!-- RegressionTest -->
  </suite> <!-- QATestSuite -->
</testng-results>
